library(ggplot2)
library(dplyr)
library(plotly)
#Set classes
str(training)
training$PassengerId <- as.factor(training$PassengerId)
training$Survived <- as.factor(training$Survived)
training$Pclass <- as.factor(training$Pclass)
training$SibSp <- as.factor(training$SibSp)
training$Parch <- as.factor(training$Parch)
#View where NA's are in realtion to columns
NAs <- lapply(training[,1:12], is.na)
lapply(NAs, sum)
sum(is.na(training$Age))/length(training$Age)*100
paste(sum(is.na(training$Age))/length(training$Age)*100, "%", sep = "")
paste(round(sum(is.na(training$Age))/length(training$Age)*100, digits = 4), "%", sep = "")
paste(round(sum(is.na(training$Age))/length(training$Age)*100, digits = 2), "%", sep = "")
#Probability of living by socio-economic status
pclass_table <- with(training, table(Survived, Pclass))
upper_class <- pclass_table[2,1]/sum(pclass_table[,1])*100
middle_class <- pclass_table[2,2]/sum(pclass_table[,2])*100
lower_class <- pclass_table[2,3]/sum(pclass_table[,3])*100
pclass_table
#Probability of living given Upper Class
paste(round(upper_class, digits = 2), "%", sep = "")
#Probability of living given Middle Class
paste(round(middle_class, digits = 2), "%", sep = "")
#Probability of living given Lower Class
paste(round(lower_class, digits = 2), "%", sep = "")
g <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
g <- g + geom_bar(aes(y=..prop.., group=Pclass,
fill=factor(..x.., labels=c("Died","Lived"))))
g <- g + facet_grid(~factor(Pclass,
labels=c("Upper Class", "Middle Class",
"Lower Class")))
g <- g + scale_y_continuous(labels = scales::percent)
g <- g + scale_fill_discrete(name="Survival Status")
g <- g + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Socio-Economic Status")
g <- g + geom_text(
aes(label = paste(round((..count../c(216,216,184,184,491,491)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(17.25,10,12.75,14.5,6.5,21))
g
total <- nrow(training)
total_died <- nrow(subset(training, Survived == 0))
total_lived <- nrow(subset(training, Survived == 1))
#Probability of Living = P(B)
prob_lived <- total_lived/(total_died + total_lived)
#Probability of being Upper, Middle or Lower class = P(A)
upper_prob <- as.numeric(table(training$Pclass)[1])/total
middle_prob <- as.numeric(table(training$Pclass)[2])/total
lower_prob <- as.numeric(table(training$Pclass)[3])/total
#Probability of being an Upper class citizen given a passenger lived
prob_upper_given_lived <- (upper_class*upper_prob)/prob_lived
#Probability of being a Middle class citizen given a passenger lived
prob_middle_given_lived <- (middle_class*middle_prob)/prob_lived
#Probability of being a Lower class ctizen given a passenger lived
prob_lower_given_lived <- (lower_class*lower_prob)/prob_lived
#"Shorthand" for calculating probability of being a X class citizen using pclass_table
upper_class_by_total <- pclass_table[2,1]/total_lived*100
middle_class_by_total <- pclass_table[2,2]/total_lived*100
lower_class_by_total <- pclass_table[2,3]/total_lived*100
#Showing that the probabilities using Bayes Theorem and pclass_table are equal
all.equal(upper_class_by_total, prob_upper_given_lived)
all.equal(middle_class_by_total, prob_middle_given_lived)
all.equal(lower_class_by_total, prob_lower_given_lived)
f <- ggplot(training, aes(y = Pclass,
x = factor(Pclass,labels=c("Upper","Middle","Lower"))))
f <- f + geom_bar(aes(y=..prop.., group=Survived,
fill = factor(..x.., labels=c("Upper Class","Middle Class","Lower Class"))))
f <- f + facet_grid(~factor(Survived, labels = c("Died","Lived")))
f <- f + scale_y_continuous(labels = scales::percent)
f <- f + scale_fill_discrete(name = "Socio-Economic Status")
f <- f + labs(x = "", y = "Percentage", title = "Probabilities of Socio-Economic Status Given Died or Survived")
f <- f + geom_text(
aes(label = paste(round((..count../c(549,549,549,342,342,342)), 4)*100, "%", sep = ""), y = ..prop..), stat= "count",
vjust = c(24,23,9,16.75,20.75,18.25))
f
a_class <- training[grep("A", training$Cabin),]
b_class <- training[grep("B", training$Cabin),]
c_class <- training[grep("C", training$Cabin),]
d_class <- training[grep("D", training$Cabin),]
e_class <- training[grep("E", training$Cabin),]
f_class <- training[grep("F", training$Cabin),]
g_class <- training[grep("G", training$Cabin),]
blank_class <- subset(training, Cabin == training[1,11])
training[c(76,129,700,716),]
training[c(76,129,700,716),]
training[c(76,129,700,716),]
table(a_class$Survived)[2]/sum(table(a_class$Survived))
table(b_class$Survived)[2]/sum(table(b_class$Survived))
table(c_class$Survived)[2]/sum(table(c_class$Survived))
table(d_class$Survived)[2]/sum(table(d_class$Survived))
table(e_class$Survived)[2]/sum(table(e_class$Survived))
table(f_class$Survived)[2]/sum(table(f_class$Survived))
table(g_class$Survived)[2]/sum(table(g_class$Survived))
table(blank_class$Survived)[2]/sum(table(blank_class$Survived))
names(training)
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Upper Class", "Middle Class",
"Lower Class")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Socio-Economic Status")
a <- a + geom_text(
aes(label = paste(round((..count../c(216,216,184,184,491,491)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(17.25,10,12.75,14.5,6.5,21))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Socio-Economic Status")
a <- a + geom_text(
aes(label = paste(round((..count../c(216,216,184,184,491,491)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(17.25,10,12.75,14.5,6.5,21))
a
table(training$Sex, training$Survived)
table(training$Survived, training$Sex)
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Socio-Economic Status")
a
sum(table(training$Survived, training$Sex)[,1])
sum(table(training$Survived, training$Sex)[,2])
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20,0,0,20))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(21,0,0,20))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,0,0,20))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,8,0,20))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,7,0,20))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,7,5.5,20))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,7,5,20))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,7,5,22))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,7,5,23))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,7,5,22))
a
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,7,5,22.5))
a
names(training)
plot(x = Age, y = Survived, training)
plot(data = training, x = Age, y = Survived)
plot(x = training$Age, y = training$Survived)
#Sex vs. Survived
a <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
a <- a + geom_bar(aes(y=..prop.., group=Sex,
fill=factor(..x.., labels=c("Died","Lived"))))
a <- a + facet_grid(~factor(Sex,
labels=c("Female", "Male")))
a <- a + scale_y_continuous(labels = scales::percent)
a <- a + scale_fill_discrete(name="Survival Status")
a <- a + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Gender")
a <- a + geom_text(
aes(label = paste(round((..count../c(314,314,577,577)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(20.5,7,5,22.5))
a
h <- ggplot(data = training,
aes(y = Survived,
x = factor(Survived, labels = c("Died","Lived"))))
h <- h + geom_bar(aes(y = ..prop.., group = Parch,
fill = factor(..x.., labels = c("Died","Lived"))))
h <- h + facet_grid(~Parch)
h <- h + scale_y_continuous(labels = scales::percent)
h <- h + scale_fill_discrete()
h
d <- ggplot(data = training,
aes(y = Survived,
x = factor(Survived, labels = c("Died","Lived"))))
d <- d + geom_bar(aes(y = ..prop.., group = SibSp,
fill = factor(..x.., labels = c("Died","Lived"))))
d <- d + facet_grid(~SibSp)
d <- d + scale_y_continuous(labels = scales::percent)
d <- d + scale_fill_discrete()
d
h <- ggplot(data = training,
aes(y = Survived,
x = factor(Survived, labels = c("Died","Lived"))))
h <- h + geom_bar(aes(y = ..prop.., group = Parch,
fill = factor(..x.., labels = c("Died","Lived"))))
h <- h + facet_grid(~Parch)
h <- h + scale_y_continuous(labels = scales::percent)
h <- h + scale_fill_discrete()
h
a_class <- training[grep("A", training$Cabin),]
b_class <- training[grep("B", training$Cabin),]
c_class <- training[grep("C", training$Cabin),]
d_class <- training[grep("D", training$Cabin),]
e_class <- training[grep("E", training$Cabin),]
f_class <- training[grep("F", training$Cabin),]
g_class <- training[grep("G", training$Cabin),]
blank_class <- subset(training, Cabin == training[1,11])
nrow(a_class, b_class)
dfs <- as.array(a_class, b_class, c_class, d_class, e_class, f_class, g_class,
blank_class)
dfs <- array(a_class, b_class, c_class, d_class, e_class, f_class, g_class,
blank_class)
dfs <- array(c(a_class, b_class, c_class, d_class, e_class, f_class, g_class,
blank_class))
class(dfs)
head(dfs)
dfs <- c(a_class, b_class, c_class, d_class, e_class, f_class, g_class,
blank_class)
class(dfs)
length(dfs)
dim(dfs)
sum(nrow(a_class) + nrow(b_class) + nrow(c_class) + nrow(d_class) +
nrow(e_class) + nrow(f_class) + nrow(g_class) + nrow(blank_class))
total
training$Cabin
training$Ticket
arrange(training, desc(Ticket))
training[c(76,129,700,716),]
training[c(76,129,700,716),]
duplicates <- training[c(76,129,700,716),]
duplicates
duplicates
g_class$Ticket
g_class$Ticket
f_class$Ticket
e_class$Ticket
g_class$Embarked
g_class - duplicates
duplicates %in% g_class
f_class$Embarked
f_class
g_class
e_class
arrange(e_class, desc(Name))
subset(training, Name == "Peter")
arrange(training, desc(Name))
arrange(training, Name)
training[grep("Peter", training$Name),]
table(training$Ticket)
training[grep("Peter", training$Name),]
arrange(training, Ticket)
head(training, n = 100)
head(arrange(training, Ticket), n = 100)
head(arrange(training, Name), n = 100)
training[grep("Peter", training$Name),]
training[grep("Peter", training$Name),]
head(arrange(training, Name), n = 500)
training[grep("Peter", training$Name),]
duplicates
training[grep("Soholt", training$Name),]
training[grep("Humblen", training$Name),]
training[grep("^34", training$Ticket),]
arrange(training[grep("^34", training$Ticket),], Ticket)
duplicates
g_class
setwd("/Users/marsh/data_science_projects/kaggle_titanic_ml/")
training <- read.csv('/Users/marsh/data_science_projects/kaggle_titanic_ml/titanic_train.csv')
testing <- read.csv("/Users/marsh/data_science_projects/kaggle_titanic_ml//titanic_test.csv")
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(plotly))
#Set classes
str(training)
training$PassengerId <- as.factor(training$PassengerId)
training$Survived <- as.factor(training$Survived)
training$Pclass <- as.factor(training$Pclass)
training$SibSp <- as.factor(training$SibSp)
training$Parch <- as.factor(training$Parch)
#View where NA's are in realtion to columns
NAs <- lapply(training[,1:12], is.na)
lapply(NAs, sum)
#Percent of Age attribute that is NA
paste(round(sum(is.na(training$Age))/length(training$Age)*100, digits = 2), "%", sep = "")
#Probability of living by socio-economic status
pclass_table <- with(training, table(Survived, Pclass))
upper_class <- pclass_table[2,1]/sum(pclass_table[,1])*100
middle_class <- pclass_table[2,2]/sum(pclass_table[,2])*100
lower_class <- pclass_table[2,3]/sum(pclass_table[,3])*100
pclass_table
#Probability of living given Upper Class
paste(round(upper_class, digits = 2), "%", sep = "")
#Probability of living given Middle Class
paste(round(middle_class, digits = 2), "%", sep = "")
#Probability of living given Lower Class
paste(round(lower_class, digits = 2), "%", sep = "")
g <- ggplot(training, aes(y=Survived,  x=factor(Survived,
labels=c("Died","Lived"))))
g <- g + geom_bar(aes(y=..prop.., group=Pclass,
fill=factor(..x.., labels=c("Died","Lived"))))
g <- g + facet_grid(~factor(Pclass,
labels=c("Upper Class", "Middle Class",
"Lower Class")))
g <- g + scale_y_continuous(labels = scales::percent)
g <- g + scale_fill_discrete(name="Survival Status")
g <- g + labs(x="", y = "Percentage",
title = "Probabilities of Living Given Socio-Economic Status")
g <- g + geom_text(
aes(label = paste(round((..count../c(216,216,184,184,491,491)), 4)*100, "%", sep = ""), y = ..prop..),  stat= "count",
vjust = c(17.25,10,12.75,14.5,6.5,21))
g
total <- nrow(training)
total_died <- nrow(subset(training, Survived == 0))
total_lived <- nrow(subset(training, Survived == 1))
#Probability of Living = P(B)
prob_lived <- total_lived/(total_died + total_lived)
#Probability of being Upper, Middle or Lower class = P(A)
upper_prob <- as.numeric(table(training$Pclass)[1])/total
middle_prob <- as.numeric(table(training$Pclass)[2])/total
lower_prob <- as.numeric(table(training$Pclass)[3])/total
#Probability of being an Upper class citizen given a passenger lived
prob_upper_given_lived <- (upper_class*upper_prob)/prob_lived
#Probability of being a Middle class citizen given a passenger lived
prob_middle_given_lived <- (middle_class*middle_prob)/prob_lived
#Probability of being a Lower class ctizen given a passenger lived
prob_lower_given_lived <- (lower_class*lower_prob)/prob_lived
#"Shorthand" for calculating probability of being a X class citizen using pclass_table
upper_class_by_total <- pclass_table[2,1]/total_lived*100
middle_class_by_total <- pclass_table[2,2]/total_lived*100
lower_class_by_total <- pclass_table[2,3]/total_lived*100
#Showing that the probabilities using Bayes Theorem and pclass_table are equal
all.equal(upper_class_by_total, prob_upper_given_lived)
all.equal(middle_class_by_total, prob_middle_given_lived)
all.equal(lower_class_by_total, prob_lower_given_lived)
myfunc <- function(x) {
(1 + (1/x))^x
}
myfunc(2)
myfunc(2)
myfunc(3)
myfunc(30)
myfunc(300)
myfunc(3000)
myfunc(30000)
myfunc(300000)
myfunc(300000)
myfunc(30000000)
myfunc(30000000000)
myfunc(300000000000)
myfunc(9999999999999)
myfunc(999999999999999999)
myfunc(9999999999999999999999)
myfunc(9999999999999)
e
exp
?export
?exp
myfunc(9999999999999)
myfunc(99999999999999)
myfunc(999999999999999)
myfunc(9999999999999999)
myfunc(9999999999999999)
myfunc(999999999999999)
myfunc(99999999999999)
myfunc(9999999999999)
myfunc(9999999999999)
myfunc(999999999999)
myfunc(99999999999)
myfunc(999999999999999999999999999)
